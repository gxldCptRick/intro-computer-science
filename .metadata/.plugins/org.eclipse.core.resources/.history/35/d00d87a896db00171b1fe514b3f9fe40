package controllers;

import enums.Branch;
import enums.MonsterDifficulty;
import models.monsters.BugBear;
import models.monsters.Goblin;
import models.monsters.base.Monster;

public class PrisonerOfAlkaTraz extends Quest {

	public PrisonerOfAlkaTraz(GameMaster gm) {
		super(gm, "Prisoner Of AlkaTraz");

	}

	public void run() {
		phaseOne();
	}

	private void phaseOne() {
		String[] openningScene = { "Finally inside" };

		String[] choices = {};

		String[][] resultOpening = { {}, {}, {} }, results = { {}, {}, {}, {}, {}, {} };

		int[] chances = { 30, 40, 60 };

		Monster[] currentEnemies = setEnemies(MonsterDifficulty.MEDIUM, 4);

		Branch currentDecision = findBranch3(openningScene, choices, resultOpening, results, chances, currentEnemies);

		switch (currentDecision) {

		case SIDE_QUEST:

			lootRoom2();

			phaseTwo();

			break;

		case NEXT_PHASE:

			phaseTwo();

			break;

		case FINAL_PHASE:

			break;

		default:
			System.out.println("You lose...");
			break;
		}
	}

	private void phaseTwo() {

		String[] openningScene = {};

		String[] choices = {};

		String[][] resultOpening = { {}, {}, {} }, results = { {}, {}, {}, {}, {}, {} };

		int[] chances = { 30, 40, 60 };

		Monster[] currentEnemies = setEnemies(MonsterDifficulty.MEDIUM, 3);

		Branch currentDecision = findBranch3(openningScene, choices, resultOpening, results, chances, currentEnemies);

		switch (currentDecision) {

		case SIDE_QUEST:

			lootRoom1();
			finalPhase();
			break;

		case NEXT_PHASE:

			finalPhase();

			break;

		case FINAL_PHASE:
			System.out.println("You are filled with determination.");
			break;

		default:

			System.out.println("You lose...");

			break;
		}
	}

	private void finalPhase() {

	}

	private void lootRoom1() {

		this.sarah.dropItems(new BugBear());

	}

	private void lootRoom2() {

		this.sarah.dropItems(new Goblin());

	}

}
